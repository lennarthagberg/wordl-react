{"ast":null,"code":"var _jsxFileName = \"/Users/lhg/IdeaProjects/word-clone/src/components/Game/Game.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { sample } from '../../utils';\nimport { WORDS } from '../../data';\nimport { NUM_OF_GUESSES_ALLOWED } from '../../constants';\nimport GuessInput from '../GuessInput';\nimport GuessResults from '../GuessResults';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst answer = sample(WORDS); // To make debugging easier, we'll log the solution in the console.\n\nconsole.info({\n  answer\n});\n\nfunction Game() {\n  _s();\n\n  const [guesses, setGuesses] = React.useState([]);\n\n  function handleSubmitGuess(tentativeGuess) {\n    const nextGuesses = [...guesses, tentativeGuess];\n    setGuesses(nextGuesses);\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(GuessResults, {\n      guesses: guesses,\n      answer: answer\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(GuessInput, {\n      gameStatus: gameStatus,\n      handleSubmitGuess: handleSubmitGuess\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Game, \"o1oJThhKU1yQYkTwv9Oq4sjxIZ4=\");\n\n_c = Game;\nexport default Game;\n\nvar _c;\n\n$RefreshReg$(_c, \"Game\");","map":{"version":3,"sources":["/Users/lhg/IdeaProjects/word-clone/src/components/Game/Game.js"],"names":["React","sample","WORDS","NUM_OF_GUESSES_ALLOWED","GuessInput","GuessResults","answer","console","info","Game","guesses","setGuesses","useState","handleSubmitGuess","tentativeGuess","nextGuesses","gameStatus"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SAASC,MAAT,QAAuB,aAAvB;AACA,SAASC,KAAT,QAAsB,YAAtB;AACA,SAASC,sBAAT,QAAuC,iBAAvC;AAEA,OAAOC,UAAP,MAAuB,eAAvB;AACA,OAAOC,YAAP,MAAyB,iBAAzB;;;AAGA,MAAMC,MAAM,GAAGL,MAAM,CAACC,KAAD,CAArB,C,CACA;;AACAK,OAAO,CAACC,IAAR,CAAa;AAAEF,EAAAA;AAAF,CAAb;;AAEA,SAASG,IAAT,GAAgB;AAAA;;AAEd,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBX,KAAK,CAACY,QAAN,CAAe,EAAf,CAA9B;;AAEA,WAASC,iBAAT,CAA2BC,cAA3B,EAA2C;AACzC,UAAMC,WAAW,GAAG,CAAC,GAAGL,OAAJ,EAAaI,cAAb,CAApB;AACAH,IAAAA,UAAU,CAACI,WAAD,CAAV;AAED;;AAED,sBACE;AAAA,4BACE,QAAC,YAAD;AAAc,MAAA,OAAO,EAAEL,OAAvB;AAAgC,MAAA,MAAM,EAAEJ;AAAxC;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,UAAD;AACE,MAAA,UAAU,EAAEU,UADd;AAEE,MAAA,iBAAiB,EAAEH;AAFrB;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA,kBADF;AASD;;GAnBQJ,I;;KAAAA,I;AAqBT,eAAeA,IAAf","sourcesContent":["import React from 'react';\n\nimport { sample } from '../../utils';\nimport { WORDS } from '../../data';\nimport { NUM_OF_GUESSES_ALLOWED } from '../../constants';\n\nimport GuessInput from '../GuessInput';\nimport GuessResults from '../GuessResults';\n\n\nconst answer = sample(WORDS);\n// To make debugging easier, we'll log the solution in the console.\nconsole.info({ answer });\n\nfunction Game() {\n\n  const [guesses, setGuesses] = React.useState([]);\n\n  function handleSubmitGuess(tentativeGuess) {\n    const nextGuesses = [...guesses, tentativeGuess];\n    setGuesses(nextGuesses);\n\n  }\n\n  return (\n    <>\n      <GuessResults guesses={guesses} answer={answer} />\n      <GuessInput\n        gameStatus={gameStatus}\n        handleSubmitGuess={handleSubmitGuess}\n      />\n    </>\n  );\n}\n\nexport default Game;\n"]},"metadata":{},"sourceType":"module"}