{"ast":null,"code":"var _jsxFileName = \"/Users/lhg/IdeaProjects/word-clone/src/components/Guess/Guess.js\";\nimport React from \"react\";\nimport { range } from \"../../utils\";\nimport { checkGuess } from \"../../game-helpers\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Guess(_ref) {\n  let {\n    value,\n    answer\n  } = _ref;\n  const result = checkGuess(value, answer);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"guess\",\n      children: range(5).map(num => /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"cell\",\n        children: value ? value[num] : undefined\n      }, num, false, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n\n_c = Guess;\nexport default Guess;\n\nvar _c;\n\n$RefreshReg$(_c, \"Guess\");","map":{"version":3,"sources":["/Users/lhg/IdeaProjects/word-clone/src/components/Guess/Guess.js"],"names":["React","range","checkGuess","Guess","value","answer","result","map","num","undefined"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,QAAsB,aAAtB;AACA,SAAQC,UAAR,QAAyB,oBAAzB;;;;AAEA,SAASC,KAAT,OAAkC;AAAA,MAAnB;AAAEC,IAAAA,KAAF;AAASC,IAAAA;AAAT,GAAmB;AAChC,QAAMC,MAAM,GAAGJ,UAAU,CAACE,KAAD,EAAQC,MAAR,CAAzB;AACA,sBACE;AAAA,2BACE;AAAG,MAAA,SAAS,EAAC,OAAb;AAAA,gBACGJ,KAAK,CAAC,CAAD,CAAL,CAASM,GAAT,CAAcC,GAAD,iBACV;AAAgB,QAAA,SAAS,EAAC,MAA1B;AAAA,kBACGJ,KAAK,GAAGA,KAAK,CAACI,GAAD,CAAR,GAAgBC;AADxB,SAAWD,GAAX;AAAA;AAAA;AAAA;AAAA,cADH;AADH;AAAA;AAAA;AAAA;AAAA;AADF,mBADF;AAWD;;KAbQL,K;AAeT,eAAeA,KAAf","sourcesContent":["import React from \"react\";\nimport { range } from \"../../utils\";\nimport {checkGuess} from \"../../game-helpers\";\n\nfunction Guess({ value, answer }) {\n  const result = checkGuess(value, answer);\n  return (\n    <>\n      <p className=\"guess\">\n        {range(5).map((num) => (\n            <span key={num} className=\"cell\">\n              {value ? value[num] : undefined}\n            </span>\n          ))}\n      </p>\n    </>\n  );\n}\n\nexport default Guess;\n"]},"metadata":{},"sourceType":"module"}