{"ast":null,"code":"var _jsxFileName = \"/Users/lhg/IdeaProjects/word-clone/src/components/Guess/Guess.js\";\nimport React from \"react\";\nimport { range } from \"../../utils\";\nimport { checkGuess } from \"../../game-helpers\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Cell(letter, status) {\n  const className = status ? `cell ${status}` : 'cell';\n  return /*#__PURE__*/_jsxDEV(\"span\", {\n    className: className,\n    children: letter\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 10\n  }, this);\n}\n\n_c = Cell;\n\nfunction Guess(_ref) {\n  let {\n    value,\n    answer\n  } = _ref;\n  const result = checkGuess(value, answer);\n  console.log(\"result: \", result);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"guess\",\n      children: range(1, 5, 1).map(num => /*#__PURE__*/_jsxDEV(Cell, {\n        letter: result ? result[num].letter : undefined,\n        status: result ? result[num].status : undefined\n      }, num, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n\n_c2 = Guess;\nexport default Guess;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Cell\");\n$RefreshReg$(_c2, \"Guess\");","map":{"version":3,"sources":["/Users/lhg/IdeaProjects/word-clone/src/components/Guess/Guess.js"],"names":["React","range","checkGuess","Cell","letter","status","className","Guess","value","answer","result","console","log","map","num","undefined"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,QAAsB,aAAtB;AACA,SAASC,UAAT,QAA2B,oBAA3B;;;;AAEA,SAASC,IAAT,CAAcC,MAAd,EAAsBC,MAAtB,EAA8B;AAC5B,QAAMC,SAAS,GAAGD,MAAM,GAAI,QAAOA,MAAO,EAAlB,GAAsB,MAA9C;AACA,sBAAO;AAAM,IAAA,SAAS,EAAEC,SAAjB;AAAA,cAA6BF;AAA7B;AAAA;AAAA;AAAA;AAAA,UAAP;AACD;;KAHQD,I;;AAKT,SAASI,KAAT,OAAkC;AAAA,MAAnB;AAAEC,IAAAA,KAAF;AAASC,IAAAA;AAAT,GAAmB;AAChC,QAAMC,MAAM,GAAGR,UAAU,CAACM,KAAD,EAAQC,MAAR,CAAzB;AAEAE,EAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBF,MAAxB;AAEA,sBACE;AAAA,2BACE;AAAG,MAAA,SAAS,EAAC,OAAb;AAAA,gBACGT,KAAK,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAAL,CAAeY,GAAf,CAAoBC,GAAD,iBAClB,QAAC,IAAD;AAEE,QAAA,MAAM,EAAEJ,MAAM,GAAGA,MAAM,CAACI,GAAD,CAAN,CAAYV,MAAf,GAAwBW,SAFxC;AAGE,QAAA,MAAM,EAAEL,MAAM,GAAGA,MAAM,CAACI,GAAD,CAAN,CAAYT,MAAf,GAAwBU;AAHxC,SACOD,GADP;AAAA;AAAA;AAAA;AAAA,cADD;AADH;AAAA;AAAA;AAAA;AAAA;AADF,mBADF;AAaD;;MAlBQP,K;AAoBT,eAAeA,KAAf","sourcesContent":["import React from \"react\";\nimport { range } from \"../../utils\";\nimport { checkGuess } from \"../../game-helpers\";\n\nfunction Cell(letter, status) {\n  const className = status ? `cell ${status}` : 'cell';\n  return <span className={className}>{letter}</span>;\n}\n\nfunction Guess({ value, answer }) {\n  const result = checkGuess(value, answer);\n\n  console.log(\"result: \", result);\n\n  return (\n    <>\n      <p className=\"guess\">\n        {range(1, 5, 1).map((num) => (\n          <Cell\n            key={num}\n            letter={result ? result[num].letter : undefined }\n            status={result ? result[num].status : undefined }\n          />\n        ))}\n      </p>\n    </>\n  );\n}\n\nexport default Guess;\n"]},"metadata":{},"sourceType":"module"}