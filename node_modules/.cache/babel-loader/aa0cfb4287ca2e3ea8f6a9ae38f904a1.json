{"ast":null,"code":"var _jsxFileName = \"/Users/lhg/IdeaProjects/word-clone/src/components/Game/Game.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { sample } from '../../utils';\nimport { WORDS } from '../../data';\nimport { NUM_OF_GUESSES_ALLOWED } from '../../constants';\nimport GuessInput from '../GuessInput';\nimport GuessResults from '../GuessResults';\nimport WonBanner from '../WonBanner';\nimport LostBanner from '../LostBanner'; // Pick a random word on every pageload.\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst answer = sample(WORDS); // To make debugging easier, we'll log the solution in the console.\n\nconsole.info({\n  answer\n});\n\nfunction Game() {\n  _s();\n\n  // running | won | lost\n  const [gameStatus, setGameStatus] = React.useState('running');\n  const [guesses, setGuesses] = React.useState([]);\n\n  function handleSubmitGuess(tentativeGuess) {\n    const nextGuesses = [...guesses, tentativeGuess];\n    setGuesses(nextGuesses);\n\n    if (tentativeGuess.toUpperCase() === answer) {\n      setGameStatus('won');\n    } else if (nextGuesses.length >= NUM_OF_GUESSES_ALLOWED) {\n      setGameStatus('lost');\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(GuessResults, {\n      guesses: guesses,\n      answer: answer\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(GuessInput, {\n      gameStatus: gameStatus,\n      handleSubmitGuess: handleSubmitGuess\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), gameStatus === 'won' && /*#__PURE__*/_jsxDEV(WonBanner, {\n      numOfGuesses: guesses.length\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }, this), gameStatus === 'lost' && /*#__PURE__*/_jsxDEV(LostBanner, {\n      answer: answer\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 33\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Game, \"hrXoQnooqksPtVBSD/b2dyqpTos=\");\n\n_c = Game;\nexport default Game;\n\nvar _c;\n\n$RefreshReg$(_c, \"Game\");","map":{"version":3,"sources":["/Users/lhg/IdeaProjects/word-clone/src/components/Game/Game.js"],"names":["React","sample","WORDS","NUM_OF_GUESSES_ALLOWED","GuessInput","GuessResults","WonBanner","LostBanner","answer","console","info","Game","gameStatus","setGameStatus","useState","guesses","setGuesses","handleSubmitGuess","tentativeGuess","nextGuesses","toUpperCase","length"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SAASC,MAAT,QAAuB,aAAvB;AACA,SAASC,KAAT,QAAsB,YAAtB;AACA,SAASC,sBAAT,QAAuC,iBAAvC;AAEA,OAAOC,UAAP,MAAuB,eAAvB;AACA,OAAOC,YAAP,MAAyB,iBAAzB;AACA,OAAOC,SAAP,MAAsB,cAAtB;AACA,OAAOC,UAAP,MAAuB,eAAvB,C,CAEA;;;;AACA,MAAMC,MAAM,GAAGP,MAAM,CAACC,KAAD,CAArB,C,CACA;;AACAO,OAAO,CAACC,IAAR,CAAa;AAAEF,EAAAA;AAAF,CAAb;;AAEA,SAASG,IAAT,GAAgB;AAAA;;AACd;AACA,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8Bb,KAAK,CAACc,QAAN,CAAe,SAAf,CAApC;AAEA,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBhB,KAAK,CAACc,QAAN,CAAe,EAAf,CAA9B;;AAEA,WAASG,iBAAT,CAA2BC,cAA3B,EAA2C;AACzC,UAAMC,WAAW,GAAG,CAAC,GAAGJ,OAAJ,EAAaG,cAAb,CAApB;AACAF,IAAAA,UAAU,CAACG,WAAD,CAAV;;AAEA,QAAID,cAAc,CAACE,WAAf,OAAiCZ,MAArC,EAA6C;AAC3CK,MAAAA,aAAa,CAAC,KAAD,CAAb;AACD,KAFD,MAEO,IAAIM,WAAW,CAACE,MAAZ,IAAsBlB,sBAA1B,EAAkD;AACvDU,MAAAA,aAAa,CAAC,MAAD,CAAb;AACD;AACF;;AAED,sBACE;AAAA,4BACE,QAAC,YAAD;AAAc,MAAA,OAAO,EAAEE,OAAvB;AAAgC,MAAA,MAAM,EAAEP;AAAxC;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,UAAD;AACE,MAAA,UAAU,EAAEI,UADd;AAEE,MAAA,iBAAiB,EAAEK;AAFrB;AAAA;AAAA;AAAA;AAAA,YAFF,EAMGL,UAAU,KAAK,KAAf,iBACC,QAAC,SAAD;AAAW,MAAA,YAAY,EAAEG,OAAO,CAACM;AAAjC;AAAA;AAAA;AAAA;AAAA,YAPJ,EASGT,UAAU,KAAK,MAAf,iBAAyB,QAAC,UAAD;AAAY,MAAA,MAAM,EAAEJ;AAApB;AAAA;AAAA;AAAA;AAAA,YAT5B;AAAA,kBADF;AAaD;;GA9BQG,I;;KAAAA,I;AAgCT,eAAeA,IAAf","sourcesContent":["import React from 'react';\n\nimport { sample } from '../../utils';\nimport { WORDS } from '../../data';\nimport { NUM_OF_GUESSES_ALLOWED } from '../../constants';\n\nimport GuessInput from '../GuessInput';\nimport GuessResults from '../GuessResults';\nimport WonBanner from '../WonBanner';\nimport LostBanner from '../LostBanner';\n\n// Pick a random word on every pageload.\nconst answer = sample(WORDS);\n// To make debugging easier, we'll log the solution in the console.\nconsole.info({ answer });\n\nfunction Game() {\n  // running | won | lost\n  const [gameStatus, setGameStatus] = React.useState('running');\n\n  const [guesses, setGuesses] = React.useState([]);\n\n  function handleSubmitGuess(tentativeGuess) {\n    const nextGuesses = [...guesses, tentativeGuess];\n    setGuesses(nextGuesses);\n\n    if (tentativeGuess.toUpperCase() === answer) {\n      setGameStatus('won');\n    } else if (nextGuesses.length >= NUM_OF_GUESSES_ALLOWED) {\n      setGameStatus('lost');\n    }\n  }\n\n  return (\n    <>\n      <GuessResults guesses={guesses} answer={answer} />\n      <GuessInput\n        gameStatus={gameStatus}\n        handleSubmitGuess={handleSubmitGuess}\n      />\n      {gameStatus === 'won' && (\n        <WonBanner numOfGuesses={guesses.length} />\n      )}\n      {gameStatus === 'lost' && <LostBanner answer={answer} />}\n    </>\n  );\n}\n\nexport default Game;\n"]},"metadata":{},"sourceType":"module"}