{"ast":null,"code":"var _jsxFileName = \"/Users/lhg/IdeaProjects/word-clone/src/components/Game/Game.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { sample } from \"../../utils\";\nimport { WORDS } from \"../../data\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst answer = sample(WORDS); // To make debugging easier, we'll log the solution in the console.\n\nconsole.info({\n  answer\n});\nconsole.info({\n  guessed\n});\n\nfunction Game() {\n  _s();\n\n  const [guessed, setGuessed] = React.useState(\"\");\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"guess-input-wrapper\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"guess-input\",\n        children: \"Enter guess:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"guess-input\",\n        value: guessed,\n        type: \"text\",\n        onChange: event => setGuessed(event.target.value.toUpperCase)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n\n_s(Game, \"n5o9GTNCi357qzVijaIpQx6iyT4=\");\n\n_c = Game;\nexport default Game;\n\nvar _c;\n\n$RefreshReg$(_c, \"Game\");","map":{"version":3,"sources":["/Users/lhg/IdeaProjects/word-clone/src/components/Game/Game.js"],"names":["React","sample","WORDS","answer","console","info","guessed","Game","setGuessed","useState","event","target","value","toUpperCase"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SAASC,MAAT,QAAuB,aAAvB;AACA,SAASC,KAAT,QAAsB,YAAtB;;;AAEA,MAAMC,MAAM,GAAGF,MAAM,CAACC,KAAD,CAArB,C,CAEA;;AACAE,OAAO,CAACC,IAAR,CAAa;AAAEF,EAAAA;AAAF,CAAb;AACAC,OAAO,CAACC,IAAR,CAAa;AAACC,EAAAA;AAAD,CAAb;;AACA,SAASC,IAAT,GAAgB;AAAA;;AACd,QAAM,CAACD,OAAD,EAAUE,UAAV,IAAwBR,KAAK,CAACS,QAAN,CAAe,EAAf,CAA9B;AAEA,sBACE;AAAA,2BACE;AAAM,MAAA,SAAS,EAAC,qBAAhB;AAAA,8BACE;AAAO,QAAA,OAAO,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AACE,QAAA,EAAE,EAAC,aADL;AAEE,QAAA,KAAK,EAAEH,OAFT;AAGE,QAAA,IAAI,EAAC,MAHP;AAIE,QAAA,QAAQ,EAAGI,KAAD,IAAWF,UAAU,CAACE,KAAK,CAACC,MAAN,CAAaC,KAAb,CAAmBC,WAApB;AAJjC;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF,mBADF;AAaD;;GAhBQN,I;;KAAAA,I;AAkBT,eAAeA,IAAf","sourcesContent":["import React from \"react\";\n\nimport { sample } from \"../../utils\";\nimport { WORDS } from \"../../data\";\n\nconst answer = sample(WORDS);\n\n// To make debugging easier, we'll log the solution in the console.\nconsole.info({ answer });\nconsole.info({guessed});\nfunction Game() {\n  const [guessed, setGuessed] = React.useState(\"\");\n\n  return (\n    <>\n      <form className=\"guess-input-wrapper\">\n        <label htmlFor=\"guess-input\">Enter guess:</label>\n        <input\n          id=\"guess-input\"\n          value={guessed}\n          type=\"text\"\n          onChange={(event) => setGuessed(event.target.value.toUpperCase)}\n        />\n      </form>\n    </>\n  );\n}\n\nexport default Game;\n"]},"metadata":{},"sourceType":"module"}