{"ast":null,"code":"var _jsxFileName = \"/Users/lhg/IdeaProjects/word-clone/src/components/GuessInput/GuessInput.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction GuessInput() {\n  _s();\n\n  const [guessed, setGuessed] = React.useState(\"\");\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: \"handleSubmit\",\n      className: \"guess-input-wrapper\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"guess-input\",\n        children: \"Enter guess:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 9,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"guess-input\",\n        value: guessed,\n        type: \"text\",\n        maxLength: 5,\n        minLength: 5,\n        onChange: event => setGuessed(event.target.value.toUpperCase())\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"Current value:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }, this), guessed || \"(empty)\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(GuessInput, \"n5o9GTNCi357qzVijaIpQx6iyT4=\");\n\n_c = GuessInput;\nexport default GuessInput;\n\nvar _c;\n\n$RefreshReg$(_c, \"GuessInput\");","map":{"version":3,"sources":["/Users/lhg/IdeaProjects/word-clone/src/components/GuessInput/GuessInput.js"],"names":["React","GuessInput","guessed","setGuessed","useState","event","target","value","toUpperCase"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;;AAEA,SAASC,UAAT,GAAsB;AAAA;;AACpB,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBH,KAAK,CAACI,QAAN,CAAe,EAAf,CAA9B;AAEA,sBACE;AAAA,4BACE;AAAM,MAAA,QAAQ,EAAC,cAAf;AAA8B,MAAA,SAAS,EAAC,qBAAxC;AAAA,8BACE;AAAO,QAAA,OAAO,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AACE,QAAA,EAAE,EAAC,aADL;AAEE,QAAA,KAAK,EAAEF,OAFT;AAGE,QAAA,IAAI,EAAC,MAHP;AAIE,QAAA,SAAS,EAAE,CAJb;AAKE,QAAA,SAAS,EAAE,CALb;AAME,QAAA,QAAQ,EAAGG,KAAD,IAAWF,UAAU,CAACE,KAAK,CAACC,MAAN,CAAaC,KAAb,CAAmBC,WAAnB,EAAD;AANjC;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAYE;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,EAEGN,OAAO,IAAI,SAFd;AAAA;AAAA;AAAA;AAAA;AAAA,YAZF;AAAA,kBADF;AAmBD;;GAtBQD,U;;KAAAA,U;AAwBT,eAAeA,UAAf","sourcesContent":["import React from \"react\";\n\nfunction GuessInput() {\n  const [guessed, setGuessed] = React.useState(\"\");\n\n  return (\n    <>\n      <form onSubmit=\"handleSubmit\" className=\"guess-input-wrapper\">\n        <label htmlFor=\"guess-input\">Enter guess:</label>\n        <input\n          id=\"guess-input\"\n          value={guessed}\n          type=\"text\"\n          maxLength={5}\n          minLength={5}\n          onChange={(event) => setGuessed(event.target.value.toUpperCase())}\n        />\n      </form>\n      <p>\n        <strong>Current value:</strong>\n        {guessed || \"(empty)\"}\n      </p>\n    </>\n  );\n}\n\nexport default GuessInput;\n"]},"metadata":{},"sourceType":"module"}