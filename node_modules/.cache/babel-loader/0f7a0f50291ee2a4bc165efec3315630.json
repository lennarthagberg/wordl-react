{"ast":null,"code":"var _jsxFileName = \"/Users/lhg/IdeaProjects/word-clone/src/components/Game/Game.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { sample } from \"../../utils\";\nimport { WORDS } from \"../../data\";\nimport { NUM_OF_GUESSES_ALLOWED } from \"../../constants\";\nimport GuessInput from \"../GuessInput\";\nimport GuessResults from \"../GuessResults\";\nimport GameOverBanner from \"../GameOverBanner\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst answer = sample(WORDS);\nconsole.info({\n  answer\n});\n\nfunction Game() {\n  _s();\n\n  const [guesses, setGuesses] = React.useState([]);\n  const [gameStatus, setGameStatus] = React.useState(\"running\");\n\n  function handleSubmitGuess(tentativeGuess) {\n    const nextGuesses = [...guesses, tentativeGuess];\n    setGuesses(nextGuesses);\n\n    if (tentativeGuess.toUpperCase() === answer) {\n      setGameStatus(\"won\");\n    } else {\n      if (nextGuesses.length >= 5) {\n        setGameStatus(\"lost\");\n      }\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [gameStatus, /*#__PURE__*/_jsxDEV(GuessResults, {\n      guesses: guesses,\n      answer: answer\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), gameStatus !== \"running\" && /*#__PURE__*/_jsxDEV(GameOverBanner, {\n      gameStatus: gameStatus\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 36\n    }, this), /*#__PURE__*/_jsxDEV(GuessInput, {\n      gameStatus: gameStatus,\n      handleSubmitGuess: handleSubmitGuess\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Game, \"uuALx4lvrabMTlnHQBYc449ZTgg=\");\n\n_c = Game;\nexport default Game;\n\nvar _c;\n\n$RefreshReg$(_c, \"Game\");","map":{"version":3,"sources":["/Users/lhg/IdeaProjects/word-clone/src/components/Game/Game.js"],"names":["React","sample","WORDS","NUM_OF_GUESSES_ALLOWED","GuessInput","GuessResults","GameOverBanner","answer","console","info","Game","guesses","setGuesses","useState","gameStatus","setGameStatus","handleSubmitGuess","tentativeGuess","nextGuesses","toUpperCase","length"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SAASC,MAAT,QAAuB,aAAvB;AACA,SAASC,KAAT,QAAsB,YAAtB;AACA,SAASC,sBAAT,QAAuC,iBAAvC;AAEA,OAAOC,UAAP,MAAuB,eAAvB;AACA,OAAOC,YAAP,MAAyB,iBAAzB;AACA,OAAOC,cAAP,MAA2B,mBAA3B;;;AAEA,MAAMC,MAAM,GAAGN,MAAM,CAACC,KAAD,CAArB;AAEAM,OAAO,CAACC,IAAR,CAAa;AAAEF,EAAAA;AAAF,CAAb;;AAEA,SAASG,IAAT,GAAgB;AAAA;;AACd,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBZ,KAAK,CAACa,QAAN,CAAe,EAAf,CAA9B;AACA,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8Bf,KAAK,CAACa,QAAN,CAAe,SAAf,CAApC;;AAEA,WAASG,iBAAT,CAA2BC,cAA3B,EAA2C;AACzC,UAAMC,WAAW,GAAG,CAAC,GAAGP,OAAJ,EAAaM,cAAb,CAApB;AACAL,IAAAA,UAAU,CAACM,WAAD,CAAV;;AACA,QAAID,cAAc,CAACE,WAAf,OAAiCZ,MAArC,EAA6C;AAC3CQ,MAAAA,aAAa,CAAC,KAAD,CAAb;AACD,KAFD,MAEO;AACL,UAAIG,WAAW,CAACE,MAAZ,IAAsB,CAA1B,EAA6B;AAC3BL,QAAAA,aAAa,CAAC,MAAD,CAAb;AACD;AACF;AACF;;AAED,sBACE;AAAA,eACGD,UADH,eAEE,QAAC,YAAD;AAAc,MAAA,OAAO,EAAEH,OAAvB;AAAgC,MAAA,MAAM,EAAEJ;AAAxC;AAAA;AAAA;AAAA;AAAA,YAFF,EAGGO,UAAU,KAAK,SAAf,iBAA4B,QAAC,cAAD;AAAgB,MAAA,UAAU,EAAEA;AAA5B;AAAA;AAAA;AAAA;AAAA,YAH/B,eAIE,QAAC,UAAD;AACE,MAAA,UAAU,EAAEA,UADd;AAEE,MAAA,iBAAiB,EAAEE;AAFrB;AAAA;AAAA;AAAA;AAAA,YAJF;AAAA,kBADF;AAWD;;GA3BQN,I;;KAAAA,I;AA6BT,eAAeA,IAAf","sourcesContent":["import React from \"react\";\n\nimport { sample } from \"../../utils\";\nimport { WORDS } from \"../../data\";\nimport { NUM_OF_GUESSES_ALLOWED } from \"../../constants\";\n\nimport GuessInput from \"../GuessInput\";\nimport GuessResults from \"../GuessResults\";\nimport GameOverBanner from \"../GameOverBanner\";\n\nconst answer = sample(WORDS);\n\nconsole.info({ answer });\n\nfunction Game() {\n  const [guesses, setGuesses] = React.useState([]);\n  const [gameStatus, setGameStatus] = React.useState(\"running\");\n\n  function handleSubmitGuess(tentativeGuess) {\n    const nextGuesses = [...guesses, tentativeGuess];\n    setGuesses(nextGuesses);\n    if (tentativeGuess.toUpperCase() === answer) {\n      setGameStatus(\"won\");\n    } else {\n      if (nextGuesses.length >= 5) {\n        setGameStatus(\"lost\");\n      }\n    }\n  }\n\n  return (\n    <>\n      {gameStatus}\n      <GuessResults guesses={guesses} answer={answer} />\n      {gameStatus !== \"running\" && <GameOverBanner gameStatus={gameStatus} />}\n      <GuessInput\n        gameStatus={gameStatus}\n        handleSubmitGuess={handleSubmitGuess}\n      />\n    </>\n  );\n}\n\nexport default Game;\n"]},"metadata":{},"sourceType":"module"}