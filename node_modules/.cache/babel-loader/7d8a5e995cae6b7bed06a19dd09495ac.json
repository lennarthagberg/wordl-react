{"ast":null,"code":"var _jsxFileName = \"/Users/lhg/IdeaProjects/word-clone/src/components/GuessInput/GuessInput.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction GuessInput(handleSubmitGuess) {\n  _s();\n\n  const [guessed, setGuessed] = React.useState(\"\");\n\n  function handleSubmit(guessed) {\n    event.preventDefault();\n    handleSubmitGuess(guessed);\n    console.log(\"received guess: \", guessed);\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      className: \"guess-input-wrapper\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"guess-input\",\n        children: \"Enter guess:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        required: true,\n        minLength: 5,\n        maxLength: 5,\n        pattern: \"[a-zA-Z]{5}\",\n        title: \"5 letter word\",\n        id: \"guess-input\",\n        value: guessed,\n        type: \"text\",\n        onChange: event => {\n          const nextGuess = event.target.value.toUpperCase();\n          setGuessed(nextGuess);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"Current value:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this), guessed || \"(empty)\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(GuessInput, \"n5o9GTNCi357qzVijaIpQx6iyT4=\");\n\n_c = GuessInput;\nexport default GuessInput;\n\nvar _c;\n\n$RefreshReg$(_c, \"GuessInput\");","map":{"version":3,"sources":["/Users/lhg/IdeaProjects/word-clone/src/components/GuessInput/GuessInput.js"],"names":["React","GuessInput","handleSubmitGuess","guessed","setGuessed","useState","handleSubmit","event","preventDefault","console","log","nextGuess","target","value","toUpperCase"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;;AAEA,SAASC,UAAT,CAAoBC,iBAApB,EAAuC;AAAA;;AACrC,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBJ,KAAK,CAACK,QAAN,CAAe,EAAf,CAA9B;;AAEA,WAASC,YAAT,CAAsBH,OAAtB,EAA+B;AAC7BI,IAAAA,KAAK,CAACC,cAAN;AACAN,IAAAA,iBAAiB,CAACC,OAAD,CAAjB;AACAM,IAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ,EAAgCP,OAAhC;AACD;;AAED,sBACE;AAAA,4BACE;AAAM,MAAA,QAAQ,EAAEG,YAAhB;AAA8B,MAAA,SAAS,EAAC,qBAAxC;AAAA,8BACE;AAAO,QAAA,OAAO,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AACE,QAAA,QAAQ,MADV;AAEE,QAAA,SAAS,EAAE,CAFb;AAGE,QAAA,SAAS,EAAE,CAHb;AAIE,QAAA,OAAO,EAAC,aAJV;AAKE,QAAA,KAAK,EAAC,eALR;AAME,QAAA,EAAE,EAAC,aANL;AAOE,QAAA,KAAK,EAAEH,OAPT;AAQE,QAAA,IAAI,EAAC,MARP;AASE,QAAA,QAAQ,EAAGI,KAAD,IAAW;AACnB,gBAAMI,SAAS,GAAGJ,KAAK,CAACK,MAAN,CAAaC,KAAb,CAAmBC,WAAnB,EAAlB;AACAV,UAAAA,UAAU,CAACO,SAAD,CAAV;AACH;AAZD;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAkBE;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,EAEGR,OAAO,IAAI,SAFd;AAAA;AAAA;AAAA;AAAA;AAAA,YAlBF;AAAA,kBADF;AAyBD;;GAlCQF,U;;KAAAA,U;AAoCT,eAAeA,UAAf","sourcesContent":["import React from \"react\";\n\nfunction GuessInput(handleSubmitGuess) {\n  const [guessed, setGuessed] = React.useState(\"\");\n\n  function handleSubmit(guessed) {\n    event.preventDefault();\n    handleSubmitGuess(guessed);\n    console.log(\"received guess: \", guessed);\n  }\n\n  return (\n    <>\n      <form onSubmit={handleSubmit} className=\"guess-input-wrapper\">\n        <label htmlFor=\"guess-input\">Enter guess:</label>\n        <input\n          required\n          minLength={5}\n          maxLength={5}\n          pattern=\"[a-zA-Z]{5}\"\n          title=\"5 letter word\"\n          id=\"guess-input\"\n          value={guessed}\n          type=\"text\"\n          onChange={(event) => {\n            const nextGuess = event.target.value.toUpperCase()\n            setGuessed(nextGuess);\n        }}\n        />\n      </form>\n      <p>\n        <strong>Current value:</strong>\n        {guessed || \"(empty)\"}\n      </p>\n    </>\n  );\n}\n\nexport default GuessInput;\n"]},"metadata":{},"sourceType":"module"}